# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

analyzer:
  exclude:
    - "**/*.g.dart"
  errors:
    always_use_package_imports: error
    #    avoid_dynamic_calls: error
    avoid_empty_else: error
    avoid_print: warning
    avoid_relative_lib_imports: error
    avoid_returning_null_for_future: error
    avoid_slow_async_io: error
    avoid_type_to_string: error
    avoid_types_as_parameter_names: true
    avoid_web_libraries_in_flutter: error
    cancel_subscriptions: error
    close_sinks: error
    comment_references: error
    control_flow_in_finally: error
    #    diagnostic_describe_all_properties: error
    empty_statements: error
    hash_and_equals: error
    #    invariant_booleans: error
    iterable_contains_unrelated_type: error
    list_remove_unrelated_type: error
    literal_only_boolean_expressions: error
    no_adjacent_strings_in_list: error
    no_duplicate_case_values: error
    no_logic_in_create_state: error
    prefer_void_to_null: error
    prefer_const_constructors: error
    test_types_in_equals: error
    throw_in_finally: error
    unnecessary_statements: error
    unrelated_type_equality_checks: error
    unsafe_html: error
    #    use_build_context_synchronously: error
    use_key_in_widget_constructors: error
    valid_regexps: error

linter:
  rules:
    # ERRORS RULES
    always_use_package_imports: true
    #    avoid_dynamic_calls: true
    avoid_empty_else: true
    avoid_print: true
    avoid_relative_lib_imports: true
    avoid_returning_null_for_future: true
    avoid_slow_async_io: true
    avoid_type_to_string: true
    avoid_types_as_parameter_names: true
    avoid_web_libraries_in_flutter: true
    cancel_subscriptions: true
    close_sinks: true
    comment_references: true
    control_flow_in_finally: true
    #    diagnostic_describe_all_properties: true
    empty_statements: true
    hash_and_equals: true
    #    invariant_booleans: true
    iterable_contains_unrelated_type: true
    list_remove_unrelated_type: true
    literal_only_boolean_expressions: true
    no_adjacent_strings_in_list: true
    no_duplicate_case_values: true
    no_logic_in_create_state: true
    prefer_void_to_null: true
    prefer_const_constructors : true
    test_types_in_equals: true
    throw_in_finally: true
    unnecessary_statements: true
    unrelated_type_equality_checks: true
    unsafe_html: true
    #    use_build_context_synchronously: true
    use_key_in_widget_constructors: true
    valid_regexps: true
    constant_identifier_names: false
    no_leading_underscores_for_local_identifiers: false
    library_private_types_in_public_api: false
    prefer_const_constructors_in_immutables: false
    depend_on_referenced_packages: false
    overridden_fields: false
    annotate_overrides: false
